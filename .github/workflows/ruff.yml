name: Run Ruff

on:
  workflow_call:
    inputs:
      versions:
        description: "Test the installation on these Python versions"
        type: string
        # default: '["3.10", "3.11", "3.12"]'
        default: '["3.12"]'
        required: false

jobs:
  run-ruff:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.versions) }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gnuplot
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev]

    - name: Check formatting with ruff
      run: |
        # Check if code is properly formatted (will fail if formatting is needed)
        ruff format --check --diff .

    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff check . --select=E9,F63,F7,F82 --output-format=github
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        ruff check . --extend-select=D,UP --line-length=127 --output-format=github --exit-zero


    
    